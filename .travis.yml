language: c

os:
    - linux
    - osx

sudo: false

addons:
  apt:
    packages:
      - rubygems

notifications:
  email: false

env:
  matrix:
    - PYTHON_VERSION=2.7 ASTROPY_VERSION=1.0
    - PYTHON_VERSION=3.4 ASTROPY_VERSION=1.0
  global:
    - PYTEST_ARGS="--cov glue"
    - MATPLOTLIB_VERSION=1.5.0
    - NUMPY_VERSION=1.10
    - IPYTHON_VERSION=4
    - NO_CFG_FILES=false
    - QT_PKG=pyqt
    - SETUP_XVFB=True
    - CONDA_DEPENDENCIES="pip dill ipython matplotlib scipy cython h5py pygments pyzmq scikit-image pandas sphinx=1.2.3 xlrd pillow pytest mock coverage pyyaml requests sphinx_rtd_theme"
    - PIP_DEPENDENCIES="pytest-cov coveralls pyavm astrodendro awscli ginga"
    - secure: NvQVc3XmmjXNVKrmaD31IgltsOImlnt3frAl4wU0pM223iejr7V57hz/V5Isx6sTANWEiRBMG27v2T8e5IiB7DQTxFUleZk3DWXQV1grw/GarEGUawXAgwDWpF0AE/7BRVJYqo2Elgaqf28+Jkun8ewvfPCiEROD2jWEpnZj+IQ=
    - secure: "SU9BYH8d9eNigypG3lC83s0NY6Mq9AHGKXyEGeXDtz1npJIC1KHdzPMP1v1K3dzCgl1p6ReMXPjZMCENyfNkad/xvzTzGk0Nu/4BjihrUPV6+ratVeLpv0JLm8ikh8q+sZURkdtzUOlds+Hfn5ku4LdpT87tcKHY9TINAGA34ZM="
    - AWS_ACCESS_KEY_ID: AKIAI2ERWDHLW3W24X3A
    - AWS_SECRET_ACCESS_KEY: $AWS_SECRET_KEY_ID

matrix:

    # Don't wait for allowed failures
    fast_finish: true

    include:

        # Astropy dev
        - os: linux
          env:
            - PYTHON_VERSION=2.7 ASTROPY_VERSION=dev

        # Numpy dev
        - os: linux
          env:
            - PYTHON_VERSION=2.7 NUMPY_VERSION=dev
            # We don't test ginga with Numpy dev due to a bug in ginga
            - PIP_DEPENDENCIES="pytest-cov coveralls pyavm astrodendro awscli"

        # PyQt5
        - os: linux
          env:
            - PYTHON_VERSION=2.7 NUMPY_VERSION=1.10 ASTROPY_VERSION=1.0 QT_PKG=pyqt5
            # We don't test ginga with PyQt5 due to a bug in ginga with QT_API
            - PIP_DEPENDENCIES="pytest-cov coveralls pyavm astrodendro awscli"

        # The following configuration tests that glue functions with minimal
        # dependencies. The --no-deps is to prevent scipy from getting
        # installed as a pandas dependency.
        - os: linux
          env:
            - PYTHON_VERSION=2.7
            - PYTEST_ARGS="--cov glue"
            - CONDA_DEPENDENCIES="pytz pyparsing cycler python-dateutil freetype libpng sip qt pip setuptools=7.0 pandas mock pbr six funcsigs matplotlib"
            - CONDA_DEPENDENCIES_FLAGS='--no-deps'
            - PIP_DEPENDENCIES="pytest-cov coveralls"

        - os: linux
          env:
            - PYTHON_VERSION=2.7
            - ASTROPY_VERSION=1.0
            - DOC_TRIGGER=1
            - APP_TRIGGER=1
            - PYTEST_ARGS="--cov glue --no-optional-skip"
            - NO_CFG_FILES=true

        # Test with older package versions:

        - os: linux
          env: PYTHON_VERSION=2.7 MATPLOTLIB_VERSION=1.3 ASTROPY_VERSION=0.3 NUMPY_VERSION=1.8

        - os: linux
          env: PYTHON_VERSION=2.7 MATPLOTLIB_VERSION=1.4 ASTROPY_VERSION=0.4 NUMPY_VERSION=1.9 IPYTHON_VERSION=1.1

        - os: linux
          env: PYTHON_VERSION=2.7 MATPLOTLIB_VERSION=1.4 ASTROPY_VERSION=0.4 NUMPY_VERSION=1.9 IPYTHON_VERSION=0.13

        # Test with PySide, but due to segmentation faults, mark as an
        # allowed failure.
        - os: linux
          env: PYTHON_VERSION=2.7 ASTROPY_VERSION=1.0 QT_PKG=pyside

        # Test without any Qt installation, which will also cause all qt
        # sub-directories to be removed, to make sure that no non-Qt code has
        # any dependence on Qt code.
        - os: linux
          env: PYTHON_VERSION=2.7 ASTROPY_VERSION=1.0 QT_PKG=False

    allow_failures:
      - env: PYTHON_VERSION=2.7 ASTROPY_VERSION=1.0 QT_PKG=pyside

before_install:

  # The PyQt5 package is in the astrofrog channel
  - if [[ $QT_PKG == pyqt5 ]]; then export CONDA_CHANNELS="astropy-ci-extras astrofrog"; fi

  # Prepare dependency list
  - if [[ $QT_PKG != False ]]; then export CONDA_DEPENDENCIES="$QT_PKG "$CONDA_DEPENDENCIES; fi

  # Special cases depending on IPython version
  - if [[ $IPYTHON_VERSION == 4 ]]; then export CONDA_DEPENDENCIES="traitlets=4.1.0 qtconsole ipykernel "$CONDA_DEPENDENCIES; fi

  # Documentation dependencies
  - if [ $DOC_TRIGGER ]; then export PIP_DEPENDENCIES="astropy-helpers linkchecker "$PIP_DEPENDENCIES; fi

  # Install ci-helpers and set up conda
  - git clone git://github.com/astropy/ci-helpers.git
  - source ci-helpers/travis/setup_conda_$TRAVIS_OS_NAME.sh

  # setup tools to trigger mac buildbot
  - if [ $TRAVIS_PULL_REQUEST == false && $APP_TRIGGER ]; then source .setup_app_trigger.sh; fi
  - if [ $TRAVIS_BRANCH = master ]; then export S3_DIR=latest; else export S3_DIR=$TRAVIS_BRANCH; fi

  # now set up a plugin configuration file with some plugins disabled. This is
  # to make sure that when we run the tests, glue will ignore this
  # configuration and will instead run tests for all plugins.
  - if [[ $NO_CFG_FILES == false ]]; then mkdir ~/.glue; printf "[plugins]\nspectrum_tool = 0\n" >> ~/.glue/plugins.cfg; fi

install:

  - LC_ALL=C

  # Uninstall PyQt if we are using PySide or PyQt5
  - if [ $QT_PKG == pyside ]; then conda remove pyqt sip || true; fi
  - if [ $QT_PKG == pyqt5 ]; then conda remove pyqt qt || true; fi

  - if [[ $QT_PKG == pyqt5 ]]; then
      export QT_QPA_PLATFORM_PLUGIN_PATH=$HOME/miniconda/envs/test/lib/qt5/plugins/platforms;
      export QT_DEBUG_PLUGINS=1;
    fi

  # Uninstall any version of Qt if QT_PKG is False, and remove all qt
  # sub-directories
  - if [[ $QT_PKG == False ]]; then
      conda remove --no-pin pyqt || true;
      conda remove --no-pin pyside || true;
      conda remove --no-pin pyqt5 || true;
      conda remove --no-pin qt || true;
      conda remove --no-pin qt5 || true;
      find . -name "qt" -type d -exec rm -r {} \; || true;
      rm glue/external/qt.py || true;
    fi

  # We need to install glue in order to make sure that the entry points are
  # installed
  - python setup.py install

script:

  - if [[ $QT_PKG == False ]]; then glue --version; fi

  - python setup.py test -a "$PYTEST_ARGS";

  # In the following, we use separate if statements for each line, to make
  # sure the exit code from each one is taken into account for the overall
  # exit code.
  - if [ $DOC_TRIGGER ]; then cd doc; make html 2> warnings.log; cd ..; fi
  - if [ $DOC_TRIGGER ]; then cat doc/warnings.log; fi
  # make sure stderr was empty, i.e. no warnings
  - if [ $DOC_TRIGGER ]; then test ! -s doc/warnings.log; fi
  - if [ $DOC_TRIGGER ]; then linkchecker --ignore-url=".*fontawesome_webfont.*" doc/_build/html; fi

after_success:

  # Coverage testing
  - if [[ $QT_PKG != False ]]; then coveralls; fi

  # Trigger the building of the MacOS X app in the Travis-MacGlue repo
  - if [ $TRAVIS_PULL_REQUEST == false && $APP_TRIGGER ]; then ./.trigger_app_build.sh; fi
